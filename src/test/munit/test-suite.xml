<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:netsuite="http://www.mulesoft.org/schema/mule/netsuite"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/netsuite http://www.mulesoft.org/schema/mule/netsuite/current/mule-netsuite.xsd">
	<munit:config name="test-suite.xml" doc:name="MUnit configuration" />
	<configuration-properties doc:name="Configuration properties"
		doc:id="c382dc50-b83c-41be-ad31-42ccb929d758" file="mule.test.properties" />
	<munit:before-test name="test-suiteBefore_Test"
		description="Before tests actions" doc:id="7f8facb1-95ae-4456-9448-faf3a3a89dc9">
		<ee:transform doc:name="Prepare create Netsuite accounts request" doc:id="ff119ee5-f65e-4dd3-a1e0-b7c732c2a861" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="testCustomer1" ><![CDATA[%dw 2.0
output application/java
var lastName = "testLastName" ++ (uuid() splitBy("-"))[0]
var firstName = "testFirstName" ++ (uuid() splitBy("-"))[0]
---
{	
	lastName: lastName,
	firstName: firstName,
	isPerson: true,
	companyName: lastName ++ " " ++ firstName,
	externalId : "231325",
	phone: "23523523",
	subsidiary: {
		"type": "SUBSIDIARY",
		internalId: p('netsuite.customer.subsidiary.internalId')
	} as Object {class: "org.mule.module.netsuite.extension.api.RecordRef"}
}]]></ee:set-variable>
				<ee:set-variable variableName="testCustomer2" ><![CDATA[%dw 2.0
output application/java
var lastName = "testLastName" ++ (uuid() splitBy("-"))[0]
var firstName = "testFirstName" ++ (uuid() splitBy("-"))[0]
---
{	
	lastName: lastName,
	firstName: firstName,
	isPerson: true,
	companyName: lastName ++ " " ++ firstName,
	externalId : "233125",
	phone: "23523523",
	subsidiary: {
		"type": "SUBSIDIARY",
		internalId: p('netsuite.customer.subsidiary.internalId')
	} as Object {class: "org.mule.module.netsuite.extension.api.RecordRef"}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<netsuite:upsert-list recordType="CUSTOMER" doc:name="Upsert list" doc:id="01ad3299-8e69-4920-8c75-298e8311f85e" config-ref="NetSuite_Config" target="netsuiteCustomers">
			<netsuite:record-maps ><![CDATA[#[[vars.testCustomer1, vars.testCustomer2]]]]></netsuite:record-maps>
		</netsuite:upsert-list>
		<logger level="INFO" doc:name="Logger" doc:id="df67f75f-66df-4c63-8682-25db5f7eeb05" message="#[output application/json --- payload]"/>
		<ee:transform doc:name="Prepare testing account for SFDC" doc:id="f7476bdd-7562-44bd-a891-a5fb51f29f81" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[{
	Name: vars.testCustomer2.firstName ++ " " ++ vars.testCustomer2.lastName,
	Phone: vars.testCustomer2.phone ++ "1"
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:create doc:name="Create Account in SFDC" doc:id="6e3a84f4-6cbc-475c-8616-86d12f47819e" config-ref="Salesforce_Sfdc_config" type="Account"/>
		<set-variable value="#[payload map $.id]" doc:name="Store IDs to variable sfdcIds" doc:id="623a0d4f-c873-45e6-a7ee-89bc1e194721" variableName="sfdcIds" />
	</munit:before-test>
	<munit:test name="test-suite-schedulerFlowTest" description="Test" doc:id="4ffcda90-21bf-4cd4-9460-09cf6ca578e5" >
		<munit:execution >
			<scripting:execute doc:name="Sleep for 5s before we start tests" doc:id="68f96218-bb52-4fbc-92c8-1b014988e3e2" engine="groovy">
				<scripting:code >sleep(5000)</scripting:code>
			</scripting:execute>
			<flow-ref doc:name="schedulerFlow" doc:id="5ab4bfcb-8d3f-4c20-b8a5-cd1d1a6a9165" name="schedulerFlow"/>
			<scripting:execute doc:name="Sleep for 30s until the processing is completed" doc:id="b09fe305-3000-4571-b824-8b555395ccb7" engine="groovy">
				<scripting:code >sleep(30000)</scripting:code>
			</scripting:execute>
 			<flow-ref doc:name="insertTest" doc:id="646a758d-9c2b-4aa8-b747-68fef943494e" name="insertTest"/>
			<flow-ref doc:name="updateTest" doc:id="bb921782-20b4-41df-8aeb-1acb94826e02" name="updateTest"/> 
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="08066a60-3479-447a-9432-19f188122449" processor="salesforce:upsert-bulk" times="1"/>
		</munit:validation>
	</munit:test>
	<sub-flow name="insertTest" doc:id="bb629d7e-cfcf-4909-9671-b9d75fbbcdc7" >
		<salesforce:query doc:name="Select created account in SFDC" doc:id="36730f0a-0922-4e19-aff8-1b136a19f671" config-ref="Salesforce_Sfdc_config">
			<salesforce:salesforce-query >SELECT Id, Name FROM Account WHERE Name = ':name'</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"name" : vars.testCustomer1.firstName ++ " " ++ vars.testCustomer1.lastName
}]]]></salesforce:parameters>
		</salesforce:query>
		<munit-tools:assert-that doc:name="Assert that we found created Account" doc:id="a8f4453a-10c6-4508-8ecf-64cc08e6129c" expression="#[sizeOf(payload)]" is='#[MunitTools::equalTo(1)]' />
		<salesforce:delete doc:name="Delete created account in SFDC" doc:id="bb885dfe-2825-4a78-928b-7e30c9118c01" config-ref="Salesforce_Sfdc_config">
			<salesforce:delete-ids><![CDATA[#[[payload[0].Id]]]]></salesforce:delete-ids>
		</salesforce:delete>
	</sub-flow>
	<sub-flow name="updateTest" doc:id="eb2c1733-e157-4563-9321-829a688c161f" >
		<salesforce:query doc:name="Select updated account in SFDC" doc:id="eb801266-1f1a-465e-9709-30e91798e974" config-ref="Salesforce_Sfdc_config">
			<salesforce:salesforce-query >SELECT Id, Phone FROM Account WHERE Name = ':name'</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"name" : vars.testCustomer2.firstName ++ " " ++ vars.testCustomer2.lastName
}]]]></salesforce:parameters>
		</salesforce:query>
		<munit-tools:assert-that doc:name="Assert that phone has been updated" doc:id="5be8506d-fc9c-489d-90dc-fa140acb956f" expression="#[payload[0].Phone]" is='#[MunitTools::equalTo(vars.testCustomer2.phone)]' />
	</sub-flow>
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="5b85bb9e-67e6-47f7-8f71-53a39f147fc8" >
	<salesforce:delete doc:name="Delete updated account in SFDC" doc:id="3c7258cd-495f-42d9-a39b-8d816b30e379" config-ref="Salesforce_Sfdc_config">
			<salesforce:delete-ids><![CDATA[#[vars.sfdcIds]]]></salesforce:delete-ids>
		</salesforce:delete>
		<ee:transform doc:name="Prepare delete test customers request" doc:id="6adfb047-595a-4ac8-8147-a3d0e7fda58a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[{
    internalId: vars.netsuiteCustomers[0].internalId,
    "type": "CUSTOMER"
} as Object {
    class : "org.mule.module.netsuite.extension.api.RecordRef"
},
{
    internalId: vars.netsuiteCustomers[1].internalId,
    "type": "CUSTOMER"
} as Object {
    class : "org.mule.module.netsuite.extension.api.RecordRef"
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<netsuite:delete-records-list doc:name="Delete test customers" doc:id="af0c89db-933d-46ac-9d2c-940a74b5ef14" config-ref="NetSuite_Config"/>
	</munit:after-test>


</mule>